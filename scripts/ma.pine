//@version=6
indicator("Moving Average", overlay=true, timeframe="", timeframe_gaps=true) // enable multi-timeframe

// Tooltips
var smaTooltip = "SMA:  The sum of last y values of x, divided by y."
var emaTooltip = "EMA:  Exponentially weighted moving average."
var rmaTooltip = "RMA:  Relative moving average."
var hmaTooltip = "HMA:  Hull Moving Average."
var wmaTooltip = "WMA:  Weighted moving average."
var vwmaTooltip = "VWMA: Volume weighted moving average."
var kindTooltip = smaTooltip + "\n" + emaTooltip + "\n" + rmaTooltip + "\n" + hmaTooltip + "\n" + wmaTooltip + "\n" + vwmaTooltip

lineColor = input.color(color.new(#e879f9, 0), title="Color") // fuchsia-400

source = input.source(close, title="Source")

kind = input.string(
  "SMA",
  title="Kind",
  tooltip=kindTooltip,
  options=["SMA", "EMA", "RMA", "HMA", "WMA", "VWMA"])

length = input.int(
  20,
  title="Length",
  minval=1)

offset = input.int(
  0,
  title="Offset",
  minval=-500,
  maxval=500,
  display=display.data_window)

colorByTrend = input.bool(
  true,
  title="Color by trend",
  tooltip="Color the moving average based on the trend rate of change")


// Calculate moving average by kind
maByKind(src, len, k) =>
    switch k
        "SMA"  => ta.sma(src, len)
        "EMA"  => ta.ema(src, len)
        "RMA"  => ta.rma(src, len)
        "HMA"  => ta.hma(src, len)
        "WMA"  => ta.wma(src, len)
        "VWMA" => ta.vwma(src, len)


// Plot moving average
ma = maByKind(source, length, kind)

// Get trend strength
trend = ta.roc(ma, 1)
trendMax = ta.highest(trend, length)
trendMin = ta.lowest(trend, length)
trendRange = trendMax - trendMin
trendNorm = trendRange == 0 ? 0.0 : ((trend - trendMin) / trendRange * 200) - 100 // normalize to -100 to 100
trendColor = color.rgb(
  trendNorm < 0 ? 255 : 255 - math.abs(trendNorm) * (255 / 100),
  trendNorm > 0 ? 255 : 255 - math.abs(trendNorm) * (255 / 100),
  0)

plot(
  ma,
  title="Line",
  color=colorByTrend ? trendColor : lineColor,
  linewidth=2,
  offset=offset)
